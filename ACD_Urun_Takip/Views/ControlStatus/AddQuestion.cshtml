@using ACD_Urun_Takip.Models;
@model ListInformation
@{
    ViewBag.Title = "AddQuestion";
}
<link href="~/assets/css/productTracking.css" rel="stylesheet" />
<link href="~/assets/plugins/boostrap-select/bootstrap-select.css" rel="stylesheet" />
<script src="~/assets/plugins/boostrap-select/bootstrap-select.js"></script>

<div class="modal fade" id="questionModal" tabindex="-1" role="basic" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content modalcontent">
            <div class="modal-header modalheader-edit">
                <h4 class="modal-title modaltitle-left">Soru Seçimi Düzenle</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            </div>
            <div class="modal-body modalbody">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label class="labeltop">Şirket Adı</label>
                            <select id="company" class="selectpicker show-tick show-menu-arrow " onchange="SelectGroup(this.value)">
                                <option value="0">Seçiniz</option>
                                @foreach (var grpKn in Model.CompanyGroups.GroupBy(o => o.CompanyID.CompanyName).ToList())
                                {
                                    <option value="@grpKn.FirstOrDefault().CompanyID.CompanyId">@grpKn.FirstOrDefault().CompanyID.CompanyName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-12" style="margin-top:-13px;">
                        <div class="form-group">
                            <label class="labeltop">Kontrol Grup Adı</label><br>
                            <select id="selectGroup" class="selectpicker show-tick show-menu-arrow " data-none-selected-text="Seçiniz">
                            <option value="0">Seçiniz</option>
                                </select>
                        </div>
                    </div>
                    <div class="col-md-12" style="margin-top:-10px;">
                        <div class="form-group">
                            <label class="labeltop" style="margin-bottom:0px">Sorular</label><br>
                            <div id="question"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" style="padding:.30rem">
                    <button type="button" class="btn bg-gradient-danger btn-sm btn-danger-width" data-dismiss="modal">Kapat</button>
                    <button type="button" class="btn bg-gradient-success btn-sm" id="btnAuditEdit">Kaydet</button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
</style>

<script>
    var model =@Html.Raw(Json.Encode(Model));
    $("#company").selectpicker();
    $("#selectGroup").selectpicker();
    console.log("aaa");
    function SelectGroup(companyId) {
        var node = document.getElementById('question');
        node.innerHTML = "";
        $("#selectGroup option").remove();
        $('#selectGroup').append($('<option>', {
            value: 0,
            text: "Seçiniz"
        }));
        for (var i = 0; i < model.CompanyGroups.length; i++) {
            if (companyId == model.CompanyGroups[i].CompanyID.CompanyId) {
                $('#selectGroup').append($('<option>', {
                    value: model.CompanyGroups[i].GroupID.GroupID,
                    text: model.CompanyGroups[i].GroupID.GroupName
                }));
            }
        }
        $("#selectGroup").selectpicker('refresh');
    }
    var groupId;
    var companyId;
    $("#btnAuditEdit").click(function () {
        groupId = $("#selectGroup").val();
        companyId = $("#company").val();
        if (companyId == 0) {
            toastr.error("Şirket Adı boş bırakılamz.")
            $(".form-group button").eq(0).addClass('RedBorder')
            borderTime($(".form-group button").eq(0));
        }
        else if (groupId == 0) {
            toastr.error("Kontrol Grup Adı boş bırakılamaz.");
            $(".form-group button").eq(1).addClass('RedBorder')
            borderTime($(".form-group button").eq(1));
        }     
        else if ($("#question").html() == '') {
            toastr.error("Seçilen şirketin grup kaydına ait silinmiş soru bulunmamaktadır!");
        }
        else {
            var selected = new Array();
            var a = 0;
            $("#question input[type=checkbox]:checked").each(function () {
                selected[a]=($(this).val());
                a++;
                console.log(selected);
            });
            if (selected.length == 0) {
                toastr.error("Lütfen soru seçimi yapınız!");
                $("#question").addClass("RedBorder");
                borderTime($("#question"));
            }
            else {
                $.ajax({
                    url: '@Url.Action("RecordQuestion", "ControlStatus")',
                    type: 'POST',
                    data: { groupId: groupid, questionId: selected, companyId: companyId },
                    success: function (result) {
                        toastr.success(result);
                        RefreshTable();
                        $("#questionModal").modal('hide');
                    },
                    error: function (result) {
                        toastr.error(result);
                    }
                });
            }
        }
    });
    $("#selectGroup").change(function () {
        groupId = $("#selectGroup").val();
            var node = document.getElementById('question');
            node.innerHTML = "";
            groupid = $("#selectGroup").val();
            companyId = $("#company").val();
            $.ajax({
                url: '@Url.Action("GetQuestions", "ControlStatus")',
                type: 'POST',
                data: { Groupid: groupid, companyId: companyId },
                success: function (result) {
                    for (var i = 0; i < result.length; i++) {
                        $("#question").append("<div style='margin-top:5px' onclick='Select(this)' class='questionDiv hover'><input onmouseout='IsInputOver(false)' onmouseover='IsInputOver(true)' style='margin-left:5px' type='checkbox' class='hover' value=" + result[i].QuestionID +"  /><label style='margin-left:5px' class='hover'>" + result[i].Question + "</label><br></div>");
                    }
                },
                error: function (result) {
                    alert(result);
                }
            });
    });
    console.log("baaa");

    var isItOver = false;
    function IsInputOver(bool) {
        isItOver = bool;
    }
    function Select(veri) {
        if (isItOver==false) {
            if ($(veri).children('input[type=checkbox]').is(':checked') == false) {
                $(veri).children('input[type=checkbox]').prop('checked', 'checked');
            }
            else {
                $(veri).children('input[type=checkbox]').prop('checked', false);
           }
        }
     }
</script>
